package com.backend.infocare.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InterventionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInterventionAllPropertiesEquals(Intervention expected, Intervention actual) {
        assertInterventionAutoGeneratedPropertiesEquals(expected, actual);
        assertInterventionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInterventionAllUpdatablePropertiesEquals(Intervention expected, Intervention actual) {
        assertInterventionUpdatableFieldsEquals(expected, actual);
        assertInterventionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInterventionAutoGeneratedPropertiesEquals(Intervention expected, Intervention actual) {
        assertThat(expected)
            .as("Verify Intervention auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInterventionUpdatableFieldsEquals(Intervention expected, Intervention actual) {
        assertThat(expected)
            .as("Verify Intervention relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getAttachments()).as("check attachments").isEqualTo(actual.getAttachments()))
            .satisfies(e -> assertThat(e.getNotes()).as("check notes").isEqualTo(actual.getNotes()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInterventionUpdatableRelationshipsEquals(Intervention expected, Intervention actual) {
        assertThat(expected)
            .as("Verify Intervention relationships")
            .satisfies(e -> assertThat(e.getProcedure()).as("check procedure").isEqualTo(actual.getProcedure()))
            .satisfies(e -> assertThat(e.getTicket()).as("check ticket").isEqualTo(actual.getTicket()));
    }
}
