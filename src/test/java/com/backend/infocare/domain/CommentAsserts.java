package com.backend.infocare.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CommentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentAllPropertiesEquals(Comment expected, Comment actual) {
        assertCommentAutoGeneratedPropertiesEquals(expected, actual);
        assertCommentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentAllUpdatablePropertiesEquals(Comment expected, Comment actual) {
        assertCommentUpdatableFieldsEquals(expected, actual);
        assertCommentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentAutoGeneratedPropertiesEquals(Comment expected, Comment actual) {
        assertThat(expected)
            .as("Verify Comment auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentUpdatableFieldsEquals(Comment expected, Comment actual) {
        assertThat(expected)
            .as("Verify Comment relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getVisibility()).as("check visibility").isEqualTo(actual.getVisibility()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getEditedBy()).as("check editedBy").isEqualTo(actual.getEditedBy()))
            .satisfies(e -> assertThat(e.getEditedAt()).as("check editedAt").isEqualTo(actual.getEditedAt()))
            .satisfies(e -> assertThat(e.getAttachments()).as("check attachments").isEqualTo(actual.getAttachments()))
            .satisfies(
                e -> assertThat(e.getResponseToCommentId()).as("check responseToCommentId").isEqualTo(actual.getResponseToCommentId())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentUpdatableRelationshipsEquals(Comment expected, Comment actual) {
        assertThat(expected)
            .as("Verify Comment relationships")
            .satisfies(e -> assertThat(e.getTicket()).as("check ticket").isEqualTo(actual.getTicket()));
    }
}
